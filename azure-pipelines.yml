# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
  - main
  
pool:
  vmImage: 'windows-latest'

variables:
  - name: sourceDirectory
    value: source  
    azureServiceConnection: 'MCAPS Hybrid'
    resourceGroupName: 'DevOpsSandbox'
    templateFile: 'main.bicep'

steps:

- task: DotNetCoreCLI@2
  inputs:
    command: restore
    arguments: '--configuration Release'
    projects: '**/*.csproj'

- task: DotNetCoreCLI@2
  inputs:
    command: test
    projects: '${{variables.sourceDirectory}}/DevOpsSandbox.Tests/*.csproj'

- task: DotNetCoreCLI@2
  inputs:
    command: publish
    arguments: '--configuration Release --output "${{variables.sourceDirectory}}/DevOpsSandbox/publish_output"'
    projects: '${{variables.sourceDirectory}}/DevOpsSandbox/*.csproj'
    publishWebProjects: false
    modifyOutputPath: false
    zipAfterPublish: false

- task: ArchiveFiles@2
  displayName: "Archive files"
  inputs:
    rootFolderOrFile: "$(System.DefaultWorkingDirectory)/${{variables.sourceDirectory}}/DevOpsSandbox/publish_output"
    includeRootFolder: false
    archiveFile: "$(System.DefaultWorkingDirectory)/build$(Build.BuildId).zip"
    
- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(System.DefaultWorkingDirectory)/build$(Build.BuildId).zip'
    artifactName: 'drop'

- task: AzureCLI@2
  inputs:
    azureSubscription: $(azureServiceConnection)
    scriptType: bash
    scriptLocation: inlineScript
    inlineScript: |
      az --version
      az deployment group create --resource-group $(resourceGroupName) --template-file $(templateFile)